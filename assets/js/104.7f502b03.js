(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{708:function(v,_,t){"use strict";t.r(_);var a=t(44),d=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"knn算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#knn算法"}},[v._v("#")]),v._v(" KNN算法")]),v._v(" "),t("p",[v._v("KNN算法的输入基于对实例的学习，或称作懒惰学习（Lazy Learning），在处理训练集的时候没有建立模型，在开始归类的时候，根据之前的比较再进行归类。")]),v._v(" "),t("h2",{attrs:{id:"例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[v._v("#")]),v._v(" 例子")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("电影名称")]),v._v(" "),t("th",[v._v("打斗场景数")]),v._v(" "),t("th",[v._v("结婚场景数")]),v._v(" "),t("th",[v._v("电影类型")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("a")]),v._v(" "),t("td",[v._v("20")]),v._v(" "),t("td",[v._v("77")]),v._v(" "),t("td",[v._v("爱情片")])]),v._v(" "),t("tr",[t("td",[v._v("b")]),v._v(" "),t("td",[v._v("12")]),v._v(" "),t("td",[v._v("55")]),v._v(" "),t("td",[v._v("爱情片")])]),v._v(" "),t("tr",[t("td",[v._v("c")]),v._v(" "),t("td",[v._v("90")]),v._v(" "),t("td",[v._v("21")]),v._v(" "),t("td",[v._v("动作片")])]),v._v(" "),t("tr",[t("td",[v._v("d")]),v._v(" "),t("td",[v._v("13")]),v._v(" "),t("td",[v._v("88")]),v._v(" "),t("td",[v._v("爱情片")])]),v._v(" "),t("tr",[t("td",[v._v("未知")]),v._v(" "),t("td",[v._v("76")]),v._v(" "),t("td",[v._v("12")]),v._v(" "),t("td",[v._v("未知")])])])]),v._v(" "),t("p",[v._v("根据之前的实例，对未知的电影进行归类。")]),v._v(" "),t("p",[v._v("对于这个问题，可以简化为以下的数学模型。")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("点")]),v._v(" "),t("th",[v._v("x坐标")]),v._v(" "),t("th",[v._v("y坐标")]),v._v(" "),t("th",[v._v("点类型")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("a")]),v._v(" "),t("td",[v._v("20")]),v._v(" "),t("td",[v._v("77")]),v._v(" "),t("td",[v._v("爱情片")])]),v._v(" "),t("tr",[t("td",[v._v("b")]),v._v(" "),t("td",[v._v("12")]),v._v(" "),t("td",[v._v("55")]),v._v(" "),t("td",[v._v("爱情片")])]),v._v(" "),t("tr",[t("td",[v._v("c")]),v._v(" "),t("td",[v._v("90")]),v._v(" "),t("td",[v._v("21")]),v._v(" "),t("td",[v._v("动作片")])]),v._v(" "),t("tr",[t("td",[v._v("d")]),v._v(" "),t("td",[v._v("13")]),v._v(" "),t("td",[v._v("88")]),v._v(" "),t("td",[v._v("爱情片")])]),v._v(" "),t("tr",[t("td",[v._v("e")]),v._v(" "),t("td",[v._v("76")]),v._v(" "),t("td",[v._v("12")]),v._v(" "),t("td",[v._v("未知")])])])]),v._v(" "),t("h2",{attrs:{id:"算法描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法描述"}},[v._v("#")]),v._v(" 算法描述")]),v._v(" "),t("ul",[t("li",[v._v("算法步骤")])]),v._v(" "),t("ol",[t("li",[v._v("为了判断未知实例的类型，用已知类别的实例作为参考")]),v._v(" "),t("li",[v._v("选择一个参数K（K代表选取这个未知类型最近的K个元素）")]),v._v(" "),t("li",[v._v("计算所有点到未知点的距离")]),v._v(" "),t("li",[v._v("在所有距离中，选择出K个最近的距离")]),v._v(" "),t("li",[v._v("根据少数服从多数的法则，让未知实例的类型是K个中实例最多的那个类型")])]),v._v(" "),t("ul",[t("li",[v._v("算法的细节")])]),v._v(" "),t("ol",[t("li",[v._v("对于距离，有很多种定义方式，比如最普遍的欧式距离（两点之间的直线距离）、曼哈顿距离、相关度等等。")])]),v._v(" "),t("h2",{attrs:{id:"优缺点及改进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点及改进"}},[v._v("#")]),v._v(" 优缺点及改进")]),v._v(" "),t("h3",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[v._v("#")]),v._v(" 优点")]),v._v(" "),t("p",[v._v("简单、易于理解、容易实现、可以选择不同的K值增强算法的健壮性。")]),v._v(" "),t("h3",{attrs:{id:"缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[v._v("#")]),v._v(" 缺点")]),v._v(" "),t("ul",[t("li",[v._v("需要大量的空间去存储已知实例的距离")]),v._v(" "),t("li",[v._v("算法的复杂度高")]),v._v(" "),t("li",[v._v("当某一类的样本数过多的时候，未知实例容易被归为样本多的那个类别。")])]),v._v(" "),t("h3",{attrs:{id:"改进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#改进"}},[v._v("#")]),v._v(" 改进")]),v._v(" "),t("p",[v._v("优化距离，距离加上一个权重，比如权重 = 1/距离")])])}),[],!1,null,null,null);_.default=d.exports}}]);