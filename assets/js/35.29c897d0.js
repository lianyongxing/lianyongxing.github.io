(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{606:function(t,a,s){t.exports=s.p+"assets/img/05F3F55A-0B0D-453F-A446-3510500F1507.b939f2e6.png"},607:function(t,a,s){t.exports=s.p+"assets/img/A0D46CE5-076B-4E28-9925-B3EF2AE1ACA3.3ce5d4c4.png"},608:function(t,a,s){t.exports=s.p+"assets/img/5764FA03-40FA-4942-AFF9-15D5AA1E124D.503a3c18.png"},726:function(t,a,s){"use strict";s.r(a);var v=s(44),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"设备管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设备管理"}},[t._v("#")]),t._v(" 设备管理")]),t._v(" "),v("h2",{attrs:{id:"设备管理概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设备管理概念"}},[t._v("#")]),t._v(" 设备管理概念")]),t._v(" "),v("h3",{attrs:{id:"设备分配"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设备分配"}},[t._v("#")]),t._v(" 设备分配")]),t._v(" "),v("p",[t._v("设备分配功能是设备管理的基本任务。"),v("br"),t._v("\n设备分配按照一定的策略，为申请设备的进程分配设备，记录设备的使用情况。")]),t._v(" "),v("h3",{attrs:{id:"设备映射"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设备映射"}},[t._v("#")]),t._v(" 设备映射")]),t._v(" "),v("h4",{attrs:{id:"物理设备"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#物理设备"}},[t._v("#")]),t._v(" 物理设备")]),t._v(" "),v("p",[t._v("I/O系统中实际安装的设备")]),t._v(" "),v("p",[t._v("物理名：ID或字符串")]),t._v(" "),v("h4",{attrs:{id:"逻辑设备"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#逻辑设备"}},[t._v("#")]),t._v(" 逻辑设备")]),t._v(" "),v("p",[t._v("应用软件使用的设备"),v("br"),t._v("\n逻辑名：友好名")]),t._v(" "),v("h4",{attrs:{id:"设备映射功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设备映射功能"}},[t._v("#")]),t._v(" 设备映射功能")]),t._v(" "),v("p",[t._v("设备管理模块将逻辑设备映射到物理设备的功能。从应用软件角度来看，逻辑设备是一类物理设备的抽象。从设备管理程序看，物理设备是逻辑设备的一个实例。")]),t._v(" "),v("h3",{attrs:{id:"设备驱动"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设备驱动"}},[t._v("#")]),t._v(" 设备驱动")]),t._v(" "),v("ul",[v("li",[t._v("对物理设备进行控制，实现I/O操作：IN/OUT")]),t._v(" "),v("li",[t._v("接受应用的服务请求（例如读/写命令），转换为具体的I/O指令，控制设备完成相关操作。")]),t._v(" "),v("li",[t._v("向用户提供统一接口\n"),v("ul",[v("li",[t._v("read/write/open")]),t._v(" "),v("li",[t._v("把外设作为特别文件处理")])])])]),t._v(" "),v("h2",{attrs:{id:"spooling系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spooling系统"}},[t._v("#")]),t._v(" Spooling系统")]),t._v(" "),v("h3",{attrs:{id:"设备分配方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设备分配方式"}},[t._v("#")]),t._v(" 设备分配方式")]),t._v(" "),v("ul",[v("li",[t._v("独占设备分配：独占型设备包括所有的字符型设备，需要向进程申请，使用完后释放。在该过程中，独占设备。")]),t._v(" "),v("li",[t._v("共享设备分配：包括块设备，使用时不需要申请")]),t._v(" "),v("li",[t._v("虚拟分配：在一类物理设备上模拟另一类物理设备的技术，借助辅存部分区域模拟独占设备，将独占设备转换为共享设备。用来模拟独占设备的部分辅存称为虚拟设备，虚拟独占设备。")])]),t._v(" "),v("h3",{attrs:{id:"虚拟分配"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#虚拟分配"}},[t._v("#")]),t._v(" 虚拟分配")]),t._v(" "),v("p",[t._v("当进程需要与独占设备交换信息时，就采用虚拟技术将该独占设备所对应的虚拟设备（部分辅存）分配给他。"),v("br"),t._v("\nSpooling系统是虚拟技术和虚拟分配的实现。")]),t._v(" "),v("ul",[v("li",[t._v("Simultaneaus Periphernal Operations Online")]),t._v(" "),v("li",[t._v("外部设备同时联机操作（假脱机输入/输出操作）"),v("br"),t._v(" "),v("div",{attrs:{align:"center"}},[v("br"),t._v(" "),v("img",{attrs:{src:s(606),width:"70%",height:"70%",alt:"图片名称"}}),v("br")])])]),t._v(" "),v("h4",{attrs:{id:"spooling的内部结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spooling的内部结构"}},[t._v("#")]),t._v(" Spooling的内部结构")]),t._v(" "),v("div",{attrs:{align:"center"}},[v("img",{attrs:{src:s(607),width:"70%",height:"70%",alt:"图片名称"}})]),t._v(" "),v("h4",{attrs:{id:"spooling原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spooling原理"}},[t._v("#")]),t._v(" Spooling原理")]),t._v(" "),v("ol",[v("li",[t._v("执行任务前：预先将程序和数据输入到输入井中")]),t._v(" "),v("li",[t._v("任务运行时：使用数据时，从输入井中取出")]),t._v(" "),v("li",[t._v("任务运行时：输出数据时，把数据写入输出井")]),t._v(" "),v("li",[t._v("任务运行完：外设空闲时输出全部数据和信息")])]),t._v(" "),v("h2",{attrs:{id:"linux模块机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#linux模块机制"}},[t._v("#")]),t._v(" Linux模块机制")]),t._v(" "),v("h3",{attrs:{id:"linux内核模块"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#linux内核模块"}},[t._v("#")]),t._v(" Linux内核模块")]),t._v(" "),v("ul",[v("li",[t._v("Loadable Kernel Module：LKM")]),t._v(" "),v("li",[t._v("解决单体内核机制的不足\n"),v("ul",[v("li",[t._v("一种未经连接的可执行代码（类似动态链接库）")]),t._v(" "),v("li",[t._v("经过装载（即链接）称为内核的一部分")]),t._v(" "),v("li",[t._v("可以动态加载或卸载")])])])]),t._v(" "),v("div",{attrs:{align:"center"}},[v("img",{attrs:{src:s(608),alt:"图片名称"}})]),t._v(" "),v("h2",{attrs:{id:"linux驱动程序（ldd）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#linux驱动程序（ldd）"}},[t._v("#")]),t._v(" Linux驱动程序（LDD）")]),t._v(" "),v("p",[t._v("驱动程序运行在内核态"),v("br"),t._v("\n物理设备在Linux系统中被当作文件处理")]),t._v(" "),v("ul",[v("li",[t._v("主设备号\n"),v("ul",[v("li",[t._v("标识该设备的种类，标识驱动程序")]),t._v(" "),v("li",[t._v("主设备号范围：1～255")]),t._v(" "),v("li",[t._v("Linux内核支持动态分配主设备号")])])]),t._v(" "),v("li",[t._v("次设备号\n"),v("ul",[v("li",[t._v("标识同一设备驱动程序的不同硬件设备")]),t._v(" "),v("li",[t._v("次设备号只在驱动程序内部使用，系统内核直接把次设备号传递给驱动程序，由驱动程序进行管理")])])])]),t._v(" "),v("h3",{attrs:{id:"ldd程序结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ldd程序结构"}},[t._v("#")]),t._v(" LDD程序结构")]),t._v(" "),v("p",[t._v("设备的开启、关闭、读写操作等等")])])}),[],!1,null,null,null);a.default=r.exports}}]);