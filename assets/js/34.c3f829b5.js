(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{603:function(v,_,t){v.exports=t.p+"assets/img/3A3270C6-0317-4320-8F97-F94B53DEC811.029f066d.png"},604:function(v,_,t){v.exports=t.p+"assets/img/BB2F293A-492F-418B-A501-4E1A1B6687C5.d69d70de.png"},605:function(v,_,t){v.exports=t.p+"assets/img/7A67561C-9BBC-4254-9838-5A681554245D.9b683a5a.png"},725:function(v,_,t){"use strict";t.r(_);var a=t(44),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"操作系统的逻辑结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统的逻辑结构"}},[v._v("#")]),v._v(" 操作系统的逻辑结构")]),v._v(" "),a("p",[v._v("OS的设计和实现思路")]),v._v(" "),a("h2",{attrs:{id:"逻辑结构的种类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑结构的种类"}},[v._v("#")]),v._v(" 逻辑结构的种类")]),v._v(" "),a("ol",[a("li",[v._v("整体式结构")]),v._v(" "),a("li",[v._v("层次式结构")])]),v._v(" "),a("p",[a("img",{attrs:{src:t(603),alt:"029f066d939cff732ebc55b010cbcfba"}})]),v._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[v._v("微内核结构")])]),v._v(" "),a("p",[v._v("操作系统 = 微内核 + 核外服务器")]),v._v(" "),a("p",[v._v("微内核：足够小，提供OS最基本的核心功能和服务")]),v._v(" "),a("ul",[a("li",[v._v("实现与硬件紧密相关的处理")]),v._v(" "),a("li",[v._v("实现一些基本的功能")]),v._v(" "),a("li",[v._v("负责客户和服务器间的通信")])]),v._v(" "),a("p",[v._v("核外服务器：完成OS的绝大部分服务功能，等待应用程序提出请求")]),v._v(" "),a("ul",[a("li",[v._v("完成OS的绝大部分服务功能，等待应用程序提出请求")]),v._v(" "),a("li",[v._v("由若干服务器或进程共同构成：例如进程/线程服务器、虚存服务器，设备管理服务器等，以进程形式运行在用户态")])]),v._v(" "),a("h2",{attrs:{id:"cpu的态（mode）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu的态（mode）"}},[v._v("#")]),v._v(" CPU的态（Mode）")]),v._v(" "),a("p",[v._v("CPU的工作状态，对资源和指令使用权限的描述，一些特权指令（不能随便使用）"),a("br"),v._v(" "),a("img",{attrs:{src:t(604),alt:"d69d70de6602ab4c7e1494644cc67ba8"}})]),v._v(" "),a("h3",{attrs:{id:"态的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#态的分类"}},[v._v("#")]),v._v(" 态的分类")]),v._v(" "),a("ul",[a("li",[v._v("核态（kernel mode）：能访问所有资源和执行所有的指令，管理程序/OS内核")]),v._v(" "),a("li",[v._v("用户态（User mode）：仅能访问部分资源，其他资源受限，用户程序")]),v._v(" "),a("li",[v._v("管态（Supervisor mode）"),a("br"),v._v("\n介于核态和用户态之间")])]),v._v(" "),a("p",[v._v("硬件按照“态”来区分CPU的状态"),a("br"),v._v("\nOS按照“进程”来区分CPU的状态")]),v._v(" "),a("p",[v._v("Intel CPU的态 Ring0～Ring3"),a("br"),v._v(" "),a("img",{attrs:{src:t(605),alt:"9b683a5a580d882bfd2cc423be7d673c"}})]),v._v(" "),a("h2",{attrs:{id:"中断机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中断机制"}},[v._v("#")]),v._v(" 中断机制")]),v._v(" "),a("p",[v._v("指CPU对外部的突发事件的反应过程或机制，CPU收到外部信号后，停止当前工作，转去处理外部事件，处理完毕后回到原来工作的中断处（断点）继续原来的工作。")]),v._v(" "),a("h3",{attrs:{id:"中断源和中断类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中断源和中断类型"}},[v._v("#")]),v._v(" 中断源和中断类型")]),v._v(" "),a("p",[v._v("引起系统中断的事件称为中断源"),a("br"),v._v("\n中断类型：")]),v._v(" "),a("ul",[a("li",[v._v("强迫性中断：程序没有预期，例如I/O、外部中断")]),v._v(" "),a("li",[v._v("自愿中断：程序有预期的，例如执行访管指令（访问内核）")]),v._v(" "),a("li",[v._v("外中断（中断）：由CPU外部事件引起，例如I/O，外部事件")]),v._v(" "),a("li",[v._v("内中断（俘获）：由CPU内部事件引起，例如访管中断、程序中断")])]),v._v(" "),a("h3",{attrs:{id:"断点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#断点"}},[v._v("#")]),v._v(" 断点")]),v._v(" "),a("p",[v._v("程序中断的地方，将要执行的下一指令的地址"),a("br"),v._v("\nCS：IP 两个寄存器")]),v._v(" "),a("h3",{attrs:{id:"现场"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现场"}},[v._v("#")]),v._v(" 现场")]),v._v(" "),a("p",[v._v("程序正确运行所依赖的信息集合")]),v._v(" "),a("ul",[a("li",[v._v("现场的保护：进入中断服务程序之前，入栈")]),v._v(" "),a("li",[v._v("现场的恢复：推出中断服务程序之后，出栈")])]),v._v(" "),a("h3",{attrs:{id:"中断响应过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中断响应过程"}},[v._v("#")]),v._v(" 中断响应过程")]),v._v(" "),a("ol",[a("li",[v._v("识别中断源")]),v._v(" "),a("li",[v._v("保护断点和现场")]),v._v(" "),a("li",[v._v("装入中断服务程序的入口地址（CS：IP）")]),v._v(" "),a("li",[v._v("进入中断服务程序")]),v._v(" "),a("li",[v._v("恢复现场和断点")]),v._v(" "),a("li",[v._v("中断返回：IRET")])])])}),[],!1,null,null,null);_.default=s.exports}}]);